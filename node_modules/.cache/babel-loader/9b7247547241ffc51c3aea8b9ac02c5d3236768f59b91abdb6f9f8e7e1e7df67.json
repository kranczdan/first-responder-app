{"ast":null,"code":"var _jsxFileName = \"/Users/danielkrancz/Documents/GitHub/first-responder-app/client/src/components/GPSDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GPSDisplay = () => {\n  _s();\n  const [location, setLocation] = useState({\n    latitude: null,\n    longitude: null\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLocation({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n    }, error => {\n      console.error('Error obtaining location', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: [\"Latitude: \", location.latitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: [\"Longitude: \", location.longitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(GPSDisplay, \"ybYDSinTlnquxsJZTKaCSwKy2uM=\");\n_c = GPSDisplay;\nexport default GPSDisplay;\nvar _c;\n$RefreshReg$(_c, \"GPSDisplay\");","map":{"version":3,"names":["React","useState","useEffect","Typography","jsxDEV","_jsxDEV","GPSDisplay","_s","location","setLocation","latitude","longitude","navigator","geolocation","getCurrentPosition","position","coords","error","console","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielkrancz/Documents/GitHub/first-responder-app/client/src/components/GPSDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\n\nconst GPSDisplay = () => {\n  const [location, setLocation] = useState({ latitude: null, longitude: null });\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        });\n      },\n      (error) => {\n        console.error('Error obtaining location', error);\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"body1\">Latitude: {location.latitude}</Typography>\n      <Typography variant=\"body1\">Longitude: {location.longitude}</Typography>\n    </div>\n  );\n};\n\nexport default GPSDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IAAES,QAAQ,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;EAE7ET,SAAS,CAAC,MAAM;IACdU,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;MACZN,WAAW,CAAC;QACVC,QAAQ,EAAEK,QAAQ,CAACC,MAAM,CAACN,QAAQ;QAClCC,SAAS,EAAEI,QAAQ,CAACC,MAAM,CAACL;MAC7B,CAAC,CAAC;IACJ,CAAC,EACAM,KAAK,IAAK;MACTC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACF,UAAU;MAACiB,OAAO,EAAC,OAAO;MAAAD,QAAA,GAAC,YAAU,EAACX,QAAQ,CAACE,QAAQ;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACtEnB,OAAA,CAACF,UAAU;MAACiB,OAAO,EAAC,OAAO;MAAAD,QAAA,GAAC,aAAW,EAACX,QAAQ,CAACG,SAAS;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvBID,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}